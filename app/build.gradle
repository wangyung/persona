plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
}

class AppVersions {
    int versionCode
    String versionName
}

def loadAppVersions() {
    def props = loadProperties("$rootDir/appVersion.properties")
    def appVersions = new AppVersions()
    appVersions.versionCode = props["version.code"] as int
    appVersions.versionName = props["version.name"]
    return appVersions
}

def appVersions = loadAppVersions()

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.androidBuildTool

    defaultConfig {
        applicationId "com.github.wangyung.persona.app"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode appVersions.versionCode
        versionName appVersions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Configure only for each module that uses Java 8
    // language features (either in its source code or
    // through dependencies).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion versions.compose
    }
}

dependencies {

    implementation project(":persona-json-serialization-kotlinx")
    implementation project(":persona-compose")
    implementation project(":persona-core")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    implementation "androidx.appcompat:appcompat:${versions.androidx.appcompat}"
    implementation "androidx.core:core-ktx:${versions.androidx.core}"
    implementation "com.google.accompanist:accompanist-insets:${versions.accompanist}"
    implementation "com.google.accompanist:accompanist-systemuicontroller:${versions.accompanist}"
    implementation "com.google.android.material:material:${versions.materialComponents}"

    // Jetpack Compose
    implementation "androidx.activity:activity-compose:${versions.composeActivity}"
    implementation "androidx.compose.material:material:${versions.compose}"
    implementation "androidx.compose.ui:ui:${versions.compose}"
    implementation "androidx.compose.ui:ui-tooling:${versions.compose}"
    implementation "androidx.constraintlayout:constraintlayout-compose:${versions.composeConstraintLayout}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:${versions.composeLifecycleViewModel}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${versions.androidx.lifecycle}"
    implementation "androidx.navigation:navigation-compose:${versions.composeNavigation}"

    testImplementation "androidx.test.ext:junit:${versions.androidx.junit}"
    testImplementation "junit:junit:${versions.jUnit}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    testImplementation "androidx.compose.ui:ui-test-junit4:${versions.compose}"
}

